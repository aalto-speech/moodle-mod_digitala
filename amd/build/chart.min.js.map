{"version":3,"file":"chart.min.js","sources":["../src/chart.js"],"sourcesContent":["// Standard license block omitted.\n/*\n * @module     mod_digitala/mic\n * @copyright  2022 Name\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport chart from 'chart';\nimport {get_strings} from 'core/str';\n\n\nconst createChart = async (id, grade, maxgrade) => {\n    const horLine = {\n        afterDraw: (chart) => {\n            const ctx = chart.ctx;\n            ctx.lineWidth = 3.5;\n            const scale = chart.chartArea.width / maxgrade;\n            const curr = chart.config._config.options.lineAt;\n            const place = chart.chartArea.left + (scale * curr);\n\n            ctx.strokeStyle = \"#ffb000\";\n            ctx.beginPath();\n            ctx.moveTo(place, chart.chartArea.top);\n            ctx.lineTo(place, chart.chartArea.bottom);\n            ctx.closePath();\n            ctx.stroke();\n        }\n    };\n\n    const kaavio = document.getElementById(id).getContext('2d');\n\n    let strings = [];\n    for (let i = 0; i <= maxgrade; i++) {\n        strings = [...strings, {\n            key: `${id}_score-${i}`,\n            component: 'digitala'\n        }];\n    }\n\n    let lineSet = [];\n\n    const evalStrings = await get_strings(strings);\n    for (let i = 0; i < evalStrings.length; i++) {\n        const evalString = evalStrings[i];\n        window.console.log(evalString);\n        const length = i === 0 ? 0 : 1;\n        lineSet = [...lineSet,\n            {\n                type: 'line',\n                label: evalString,\n                data: [length],\n                backgroundColor: 'rgba(255,0,0,1)',\n                showLine: true,\n                pointRadius: 5,\n            }\n        ];\n    }\n\n    let basicDataset = [\n        ...lineSet,\n        {\n            type: 'bar',\n            label: 'noshow',\n            data: [1],\n            backgroundColor: 'rgba(182, 182, 182, 0.3)'\n        },\n        {\n            type: 'bar',\n            label: 'noshow',\n            data: [1],\n            backgroundColor: 'rgba(123, 123, 123, 0.3)'\n        },\n        {\n            type: 'bar',\n            label: 'noshow',\n            data: [1],\n            backgroundColor: 'rgba(182, 182, 182, 0.3)'\n        },\n    ];\n\n    window.console.log('maxGrade', maxgrade);\n    if (maxgrade === '4') {\n        basicDataset = [...basicDataset, {\n            type: 'bar',\n            label: 'noshow',\n            data: [1],\n            backgroundColor: 'rgba(123, 123, 123, 0.3)'\n        }];\n    }\n\n    const selectedDataset = basicDataset;\n\n    new chart.Chart(kaavio, {\n        type: 'bar',\n        data: {\n            labels: [\"\"],\n            datasets: selectedDataset\n        },\n        plugins: [horLine],\n        options: {\n            plugins: {\n                legend: {\n                    display: false\n                },\n                tooltip: {\n                    filter: (tooltipItem) => {\n                        window.console.log('label', tooltipItem);\n                        return tooltipItem.dataset.type !== \"bar\";\n                    },\n                    external: (tooltipModel) => {\n                        window.console.log(tooltipModel.chart.canvas.attributes['data-eval-name']);\n                        window.console.log(tooltipModel);\n                    }\n                }\n            },\n            lineAt: grade,\n            indexAxis: 'y',\n            scales: {\n                x: {\n                    stacked: true,\n                },\n                y: {\n                    stacked: true\n                },\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                    }\n                }]\n            }\n        }\n    });\n};\n\nexport const init = (pagenum) => {\n\n    if (pagenum === 2) {\n        const allCanvases = document.getElementsByClassName('report-chart');\n        window.console.log('allCanvases >', allCanvases);\n        for (let i = 0; i < allCanvases.length; i++) {\n            const canvas = allCanvases[i];\n            window.console.log('Attributes:', canvas.attributes);\n            createChart(canvas.attributes[\"data-eval-name\"].value,\n                        canvas.attributes[\"data-eval-grade\"].value,\n                        canvas.attributes[\"data-eval-maxgrade\"].value);\n        }\n        // createChart(id, value);\n    }\n};"],"names":["createChart","id","grade","maxgrade","horLine","afterDraw","chart","ctx","lineWidth","scale","chartArea","width","curr","config","_config","options","lineAt","place","left","strokeStyle","beginPath","moveTo","top","lineTo","bottom","closePath","stroke","kaavio","document","getElementById","getContext","strings","i","key","component","lineSet","evalStrings","length","evalString","window","console","log","type","label","data","backgroundColor","showLine","pointRadius","basicDataset","selectedDataset","Chart","labels","datasets","plugins","legend","display","tooltip","filter","tooltipItem","dataset","external","tooltipModel","canvas","attributes","indexAxis","scales","x","stacked","y","yAxes","ticks","beginAtZero","pagenum","allCanvases","getElementsByClassName","value"],"mappings":"i2CAWMA,yCAAc,iBAAOC,GAAIC,MAAOC,sNAC5BC,QAAU,CACZC,UAAW,SAACC,WACFC,IAAMD,MAAMC,IAClBA,IAAIC,UAAY,QACVC,MAAQH,MAAMI,UAAUC,MAAQR,SAChCS,KAAON,MAAMO,OAAOC,QAAQC,QAAQC,OACpCC,MAAQX,MAAMI,UAAUQ,KAAQT,MAAQG,KAE9CL,IAAIY,YAAc,UAClBZ,IAAIa,YACJb,IAAIc,OAAOJ,MAAOX,MAAMI,UAAUY,KAClCf,IAAIgB,OAAON,MAAOX,MAAMI,UAAUc,QAClCjB,IAAIkB,YACJlB,IAAImB,WAINC,OAASC,SAASC,eAAe5B,IAAI6B,WAAW,MAElDC,QAAU,GACLC,EAAI,EAAGA,GAAK7B,SAAU6B,IAC3BD,qCAAcA,UAAS,CACnBE,cAAQhC,qBAAY+B,GACpBE,UAAW,qBAIfC,QAAU,oBAEY,oBAAYJ,oBAAhCK,0BACGJ,GAAI,EAAGA,GAAII,YAAYC,OAAQL,KAC9BM,WAAaF,YAAYJ,IAC/BO,OAAOC,QAAQC,IAAIH,YACbD,OAAe,IAANL,GAAU,EAAI,EAC7BG,qCAAcA,UACV,CACIO,KAAM,OACNC,MAAOL,WACPM,KAAM,CAACP,QACPQ,gBAAiB,kBACjBC,UAAU,EACVC,YAAa,KAKrBC,0CACGb,UACH,CACIO,KAAM,MACNC,MAAO,SACPC,KAAM,CAAC,GACPC,gBAAiB,4BAErB,CACIH,KAAM,MACNC,MAAO,SACPC,KAAM,CAAC,GACPC,gBAAiB,4BAErB,CACIH,KAAM,MACNC,MAAO,SACPC,KAAM,CAAC,GACPC,gBAAiB,8BAIzBN,OAAOC,QAAQC,IAAI,WAAYtC,UACd,MAAbA,WACA6C,0CAAmBA,eAAc,CAC7BN,KAAM,MACNC,MAAO,SACPC,KAAM,CAAC,GACPC,gBAAiB,+BAInBI,gBAAkBD,iBAEpB1C,eAAM4C,MAAMvB,OAAQ,CACpBe,KAAM,MACNE,KAAM,CACFO,OAAQ,CAAC,IACTC,SAAUH,iBAEdI,QAAS,CAACjD,SACVW,QAAS,CACLsC,QAAS,CACLC,OAAQ,CACJC,SAAS,GAEbC,QAAS,CACLC,OAAQ,SAACC,oBACLnB,OAAOC,QAAQC,IAAI,QAASiB,aACQ,QAA7BA,YAAYC,QAAQjB,MAE/BkB,SAAU,SAACC,cACPtB,OAAOC,QAAQC,IAAIoB,aAAavD,MAAMwD,OAAOC,WAAW,mBACxDxB,OAAOC,QAAQC,IAAIoB,iBAI/B7C,OAAQd,MACR8D,UAAW,IACXC,OAAQ,CACJC,EAAG,CACCC,SAAS,GAEbC,EAAG,CACCD,SAAS,GAEbE,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,4bAQjB,SAACC,YAED,IAAZA,QAAe,KACTC,YAAc7C,SAAS8C,uBAAuB,gBACpDnC,OAAOC,QAAQC,IAAI,gBAAiBgC,iBAC/B,IAAIzC,EAAI,EAAGA,EAAIyC,YAAYpC,OAAQL,IAAK,KACnC8B,OAASW,YAAYzC,GAC3BO,OAAOC,QAAQC,IAAI,cAAeqB,OAAOC,YACzC/D,YAAY8D,OAAOC,WAAW,kBAAkBY,MACpCb,OAAOC,WAAW,mBAAmBY,MACrCb,OAAOC,WAAW,sBAAsBY"}