define("mod_digitala/chart",["exports","chart","core/str"],(function(_exports,_chart,_str){var obj;function _toConsumableArray(arr){return function(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_chart=(obj=_chart)&&obj.__esModule?obj:{default:obj};var fn,_ref,createChart=(fn=regeneratorRuntime.mark((function _callee(id,grade,maxgrade){var horLine,kaavio,strings,i,lineSet,evalStrings,_i,evalString,length,basicDataset,selectedDataset;return regeneratorRuntime.wrap((function(_context){for(;;)switch(_context.prev=_context.next){case 0:for(horLine={afterDraw:function(chart){var ctx=chart.ctx;ctx.lineWidth=3.5;var scale=chart.chartArea.width/maxgrade,curr=chart.config._config.options.lineAt,place=chart.chartArea.left+scale*curr;ctx.strokeStyle="#ffb000",ctx.beginPath(),ctx.moveTo(place,chart.chartArea.top),ctx.lineTo(place,chart.chartArea.bottom),ctx.closePath(),ctx.stroke()}},kaavio=document.getElementById(id).getContext("2d"),strings=[],i=0;i<=maxgrade;i++)strings=[].concat(_toConsumableArray(strings),[{key:"".concat(id,"_score-").concat(i),component:"digitala"}]);return lineSet=[],_context.next=7,(0,_str.get_strings)(strings);case 7:for(evalStrings=_context.sent,_i=0;_i<evalStrings.length;_i++)evalString=evalStrings[_i],window.console.log(evalString),length=0===_i?0:1,lineSet=[].concat(_toConsumableArray(lineSet),[{type:"line",label:evalString,data:[length],backgroundColor:"rgba(255,0,0,1)",showLine:!0,pointRadius:5}]);basicDataset=[].concat(_toConsumableArray(lineSet),[{type:"bar",label:"noshow",data:[1],backgroundColor:"rgba(182, 182, 182, 0.3)"},{type:"bar",label:"noshow",data:[1],backgroundColor:"rgba(123, 123, 123, 0.3)"},{type:"bar",label:"noshow",data:[1],backgroundColor:"rgba(182, 182, 182, 0.3)"}]),window.console.log("maxGrade",maxgrade),"4"===maxgrade&&(basicDataset=[].concat(_toConsumableArray(basicDataset),[{type:"bar",label:"noshow",data:[1],backgroundColor:"rgba(123, 123, 123, 0.3)"}])),selectedDataset=basicDataset,new _chart.default.Chart(kaavio,{type:"bar",data:{labels:[""],datasets:selectedDataset},plugins:[horLine],options:{plugins:{legend:{display:!1},tooltip:{filter:function(tooltipItem){return window.console.log("label",tooltipItem),"bar"!==tooltipItem.dataset.type},external:function(tooltipModel){window.console.log(tooltipModel.chart.canvas.attributes["data-eval-name"]),window.console.log(tooltipModel)}}},lineAt:grade,indexAxis:"y",scales:{x:{stacked:!0},y:{stacked:!0},yAxes:[{ticks:{beginAtZero:!0}}]}}});case 14:case"end":return _context.stop()}}),_callee)})),_ref=function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))},function(_x,_x2,_x3){return _ref.apply(this,arguments)});_exports.init=function(pagenum){if(2===pagenum){var allCanvases=document.getElementsByClassName("report-chart");window.console.log("allCanvases >",allCanvases);for(var i=0;i<allCanvases.length;i++){var canvas=allCanvases[i];window.console.log("Attributes:",canvas.attributes),createChart(canvas.attributes["data-eval-name"].value,canvas.attributes["data-eval-grade"].value,canvas.attributes["data-eval-maxgrade"].value)}}}}));

//# sourceMappingURL=chart.min.js.map