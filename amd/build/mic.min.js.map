{"version":3,"sources":["../src/mic.js"],"names":["recorder","isRecording","audioChunks","startStopRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","start","window","console","log","addEventListener","event","push","data","audioBlob","Blob","audioUrl","URL","createObjectURL","Audio","play","stop","initializeMicrophone","recButton","document","getElementById","stopButton","onclick","style","backgroundColor","disabled","init"],"mappings":"yJAOIA,CAAAA,C,CACAC,CAAW,G,CACXC,CAAW,CAAG,E,CAEZC,CAAkB,CAAG,UAAM,CAC7B,OAAQF,CAAR,EACI,OACIG,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC,CAAEC,KAAK,GAAP,CAApC,EACKC,IADL,CACU,SAAAC,CAAM,CAAI,CACZT,CAAQ,CAAG,GAAIU,CAAAA,aAAJ,CAAkBD,CAAlB,CAAX,CACAR,CAAW,GAAX,CACAC,CAAW,CAAG,EAAd,CACAF,CAAQ,CAACW,KAAT,GACAC,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,mBAAnB,EAEAd,CAAQ,CAACe,gBAAT,CAA0B,eAA1B,CAA2C,SAAAC,CAAK,CAAI,CAChDd,CAAW,CAACe,IAAZ,CAAiBD,CAAK,CAACE,IAAvB,CACH,CAFD,EAIAlB,CAAQ,CAACe,gBAAT,CAA0B,MAA1B,CAAkC,UAAM,IAC9BI,CAAAA,CAAS,CAAG,GAAIC,CAAAA,IAAJ,CAASlB,CAAT,CADkB,CAE9BmB,CAAQ,CAAGC,GAAG,CAACC,eAAJ,CAAoBJ,CAApB,CAFmB,CAG9BZ,CAAK,CAAG,GAAIiB,CAAAA,KAAJ,CAAUH,CAAV,CAHsB,CAIpCT,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,UAAnB,CAA+BO,CAA/B,EACAd,CAAK,CAACkB,IAAN,EACH,CAND,CAOH,CAnBL,EAoBA,MACJ,OACIxB,CAAW,GAAX,CACAD,CAAQ,CAAC0B,IAAT,GACAd,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,mBAAnB,EACA,MA3BR,CA6BH,C,wBAEmC,QAAvBa,CAAAA,oBAAuB,EAAM,IAChCC,CAAAA,CAAS,CAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADoB,CAEhCC,CAAU,CAAGF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAFmB,CAGtCF,CAAS,CAACI,OAAV,CAAoB,UAAM,CACtBJ,CAAS,CAACK,KAAV,CAAgBC,eAAhB,CAAkC,MAAlC,CACAN,CAAS,CAACO,QAAV,IACAJ,CAAU,CAACI,QAAX,IACAhC,CAAkB,EACrB,CALD,CAMA4B,CAAU,CAACC,OAAX,CAAqB,UAAM,CACvBJ,CAAS,CAACK,KAAV,CAAgBC,eAAhB,CAAkC,KAAlC,CACAN,CAAS,CAACO,QAAV,IACAJ,CAAU,CAACI,QAAX,IACAhC,CAAkB,EACrB,CACJ,C,QAEmB,QAAPiC,CAAAA,IAAO,EAAM,CACtBxB,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,sBAAnB,CAEH,C","sourcesContent":["// Standard license block omitted.\n/*\n * @module     mod_digitala/mic\n * @copyright  2022 Name\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nlet recorder;\nlet isRecording = false;\nlet audioChunks = [];\n\nconst startStopRecording = () => {\n    switch (isRecording) {\n        case false:\n            navigator.mediaDevices.getUserMedia({ audio: true })\n                .then(stream => {\n                    recorder = new MediaRecorder(stream);\n                    isRecording = true;\n                    audioChunks = [];\n                    recorder.start();\n                    window.console.log('started to record');\n\n                    recorder.addEventListener(\"dataavailable\", event => {\n                        audioChunks.push(event.data);\n                    });\n\n                    recorder.addEventListener(\"stop\", () => {\n                        const audioBlob = new Blob(audioChunks);\n                        const audioUrl = URL.createObjectURL(audioBlob);\n                        const audio = new Audio(audioUrl);\n                        window.console.log('audioUrl', audioUrl);\n                        audio.play();\n                    });\n                });\n            break;\n        case true:\n            isRecording = false;\n            recorder.stop();\n            window.console.log('recording stopped');\n            break;\n    }\n};\n\nexport const initializeMicrophone = () => {\n    const recButton = document.getElementById('record');\n    const stopButton = document.getElementById('stopRecord');\n    recButton.onclick = () => {\n        recButton.style.backgroundColor = \"blue\";\n        recButton.disabled = true;\n        stopButton.disabled = false;\n        startStopRecording();\n    };\n    stopButton.onclick = () => {\n        recButton.style.backgroundColor = \"red\";\n        recButton.disabled = false;\n        stopButton.disabled = true;\n        startStopRecording();\n    };\n};\n\nexport const init = () => {\n    window.console.log('we have been started');\n    //const button = document.getElementById('record');\n};\n/*\nexport const init = () => {\n    document.addEventListener('click', e => {\n        const record = e.target.closest('.record');\n        const stopRecord = e.target.closest('.stopRecord');\n        if (record) {\n            record.disabled = true;\n            record.style.backgroundColor = \"blue\";\n            document.getElementById(\"stopRecord\").disabled = false;\n\n        }\n        if (stopRecord) {\n            document.getElementById(\"record\").disabled = false;\n            document.getElementById(\"record\").style.backgroundColor = \"red\";\n        }\n    });\n};\n*/"],"file":"mic.min.js"}