{"version":3,"file":"mic.min.js","sources":["../src/mic.js"],"sourcesContent":["// Standard license block omitted.\n/*\n * @module     mod_digitala/mic\n * @copyright  2022 Name\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport RecordRTC from 'RecordRTC';\nimport mdlcfg from 'core/config';\n\nlet recorder;\nlet isRecording = false;\nlet audio;\n\nconst startStopRecording = (pagenum, assignmentId, userId, username) => {\n    switch (isRecording) {\n        case false:\n            navigator.mediaDevices.getUserMedia({audio: true})\n                .then(stream => {\n                    const options = {\n                        audioBitsPerSecond: 16000,\n                        type: 'audio',\n                        recorderType: RecordRTC.StereoAudioRecorder,\n                        mimeType: 'audio/wav',\n                        numberOfAudioChannels: 1\n                    };\n                    recorder = new RecordRTC(stream, options);\n                    isRecording = true;\n\n                    recorder.startRecording();\n\n                    return;\n                })\n                .catch((err) => {\n                    window.console.error(err);\n                });\n            break;\n\n        case true:\n            isRecording = false;\n            recorder.stopRecording(() => {\n                const audioBlob = recorder.getBlob();\n\n                const audioUrl = URL.createObjectURL(audioBlob);\n                audio = new Audio(audioUrl);\n\n                if (pagenum === 1) {\n                    const form = new FormData();\n                    form.append('repo_id', '5');\n                    form.append('ctx_id', mdlcfg.contextid);\n                    form.append('itemid', '0');\n                    form.append('savepath', '/');\n                    form.append('sesskey', mdlcfg.sesskey);\n                    form.append('repo_upload_file', audioBlob,\n                        `ans-${assignmentId}-${userId}-${username}-${new Date().valueOf()}.wav`);\n                    form.append('overwrite', '1');\n\n                    const req = new XMLHttpRequest();\n                    req.open('POST', mdlcfg.wwwroot + '/repository/repository_ajax.php?action=upload');\n                    req.addEventListener('readystatechange', (event) => {\n                        document.forms.answerrecording[0].value = event.target.response;\n                        document.getElementById('submitModalButton').style.display = '';\n                    });\n                    req.send(form);\n                }\n            });\n            break;\n    }\n};\n\nconst listenRecording = () => {\n    const microphoneIcon = document.getElementById('microphoneIconBox');\n    if (audio !== undefined) {\n        audio.play();\n        microphoneIcon.style.border = '2.5px dashed green';\n    } else {\n        microphoneIcon.style.border = '2.5px dashed red';\n    }\n};\n\nexport const initializeMicrophone = (pagenum, assignmentId, userId, username) => {\n    if (pagenum !== 2) {\n        const recButton = document.getElementById('record');\n        const stopButton = document.getElementById('stopRecord');\n        const listenButton = document.getElementById('listenButton');\n        listenButton.disabled = true;\n\n        recButton.onclick = () => {\n            recButton.disabled = true;\n            stopButton.disabled = false;\n            listenButton.disabled = true;\n            recButton.style.display = 'none';\n            stopButton.style.display = 'inline-block';\n            startStopRecording(pagenum, assignmentId, userId, username);\n        };\n        stopButton.onclick = () => {\n            recButton.disabled = false;\n            stopButton.disabled = true;\n            listenButton.disabled = false;\n            recButton.style.display = 'inline-block';\n            stopButton.style.display = 'none';\n            startStopRecording(pagenum, assignmentId, userId, username);\n        };\n        listenButton.onclick = () => {\n            listenRecording();\n        };\n    }\n};"],"names":["recorder","audio","isRecording","startStopRecording","pagenum","assignmentId","userId","username","navigator","mediaDevices","getUserMedia","then","stream","options","audioBitsPerSecond","type","recorderType","RecordRTC","StereoAudioRecorder","mimeType","numberOfAudioChannels","startRecording","catch","err","window","console","error","stopRecording","audioBlob","getBlob","audioUrl","URL","createObjectURL","Audio","form","FormData","append","mdlcfg","contextid","sesskey","Date","valueOf","req","XMLHttpRequest","open","wwwroot","addEventListener","event","document","forms","answerrecording","value","target","response","getElementById","style","display","send","recButton","stopButton","listenButton","disabled","onclick","microphoneIcon","undefined","play","border"],"mappings":";;;;;SASIA,gMAEAC,MADAC,aAAc,EAGZC,mBAAqB,SAACC,QAASC,aAAcC,OAAQC,iBAC/CL,kBACC,EACDM,UAAUC,aAAaC,aAAa,CAACT,OAAO,IACvCU,MAAK,SAAAC,YACIC,QAAU,CACZC,mBAAoB,KACpBC,KAAM,QACNC,aAAcC,mBAAUC,oBACxBC,SAAU,YACVC,sBAAuB,GAE3BpB,SAAW,IAAIiB,mBAAUL,OAAQC,SACjCX,aAAc,EAEdF,SAASqB,oBAIZC,OAAM,SAACC,KACJC,OAAOC,QAAQC,MAAMH,mBAI5B,EACDrB,aAAc,EACdF,SAAS2B,eAAc,eACbC,UAAY5B,SAAS6B,UAErBC,SAAWC,IAAIC,gBAAgBJ,cACrC3B,MAAQ,IAAIgC,MAAMH,UAEF,IAAZ1B,QAAe,KACT8B,KAAO,IAAIC,SACjBD,KAAKE,OAAO,UAAW,KACvBF,KAAKE,OAAO,SAAUC,gBAAOC,WAC7BJ,KAAKE,OAAO,SAAU,KACtBF,KAAKE,OAAO,WAAY,KACxBF,KAAKE,OAAO,UAAWC,gBAAOE,SAC9BL,KAAKE,OAAO,mBAAoBR,wBACrBvB,yBAAgBC,mBAAUC,sBAAY,IAAIiC,MAAOC,mBAC5DP,KAAKE,OAAO,YAAa,SAEnBM,IAAM,IAAIC,eAChBD,IAAIE,KAAK,OAAQP,gBAAOQ,QAAU,iDAClCH,IAAII,iBAAiB,oBAAoB,SAACC,OACtCC,SAASC,MAAMC,gBAAgB,GAAGC,MAAQJ,MAAMK,OAAOC,SACvDL,SAASM,eAAe,qBAAqBC,MAAMC,QAAU,MAEjEd,IAAIe,KAAKvB,0CAiBO,SAAC9B,QAASC,aAAcC,OAAQC,aAChD,IAAZH,QAAe,KACTsD,UAAYV,SAASM,eAAe,UACpCK,WAAaX,SAASM,eAAe,cACrCM,aAAeZ,SAASM,eAAe,gBAC7CM,aAAaC,UAAW,EAExBH,UAAUI,QAAU,WAChBJ,UAAUG,UAAW,EACrBF,WAAWE,UAAW,EACtBD,aAAaC,UAAW,EACxBH,UAAUH,MAAMC,QAAU,OAC1BG,WAAWJ,MAAMC,QAAU,eAC3BrD,mBAAmBC,QAASC,aAAcC,OAAQC,WAEtDoD,WAAWG,QAAU,WACjBJ,UAAUG,UAAW,EACrBF,WAAWE,UAAW,EACtBD,aAAaC,UAAW,EACxBH,UAAUH,MAAMC,QAAU,eAC1BG,WAAWJ,MAAMC,QAAU,OAC3BrD,mBAAmBC,QAASC,aAAcC,OAAQC,WAEtDqD,aAAaE,QAAU,WAjCP,IACdC,eAAAA,eAAiBf,SAASM,eAAe,0BACjCU,IAAV/D,OACAA,MAAMgE,OACNF,eAAeR,MAAMW,OAAS,sBAE9BH,eAAeR,MAAMW,OAAS"}