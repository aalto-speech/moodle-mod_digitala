{"version":3,"sources":["../src/mic.js"],"names":["recorder","isRecording","audio","startStopRecording","pagenum","assignmentId","userId","username","navigator","mediaDevices","getUserMedia","then","stream","options","audioBitsPerSecond","type","recorderType","RecordRTC","StereoAudioRecorder","mimeType","numberOfAudioChannels","startRecording","window","console","log","catch","err","error","stopRecording","audioBlob","getBlob","audioUrl","URL","createObjectURL","Audio","form","FormData","append","mdlcfg","contextid","sesskey","Date","valueOf","req","XMLHttpRequest","open","wwwroot","addEventListener","event","JSON","parse","target","response","document","forms","answerrecording","value","getElementById","style","display","send","M","cfg","listenRecording","play","initializeMicrophone","recButton","stopButton","listenButton","disabled","onclick","backgroundColor"],"mappings":"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","sourcesContent":["// Standard license block omitted.\n/*\n * @module     mod_digitala/mic\n * @copyright  2022 Name\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport RecordRTC from 'RecordRTC';\nimport mdlcfg from 'core/config';\n\nlet recorder;\nlet isRecording = false;\nlet audio;\n\nconst startStopRecording = (pagenum, assignmentId, userId, username) => {\n    switch (isRecording) {\n        case false:\n            navigator.mediaDevices.getUserMedia({audio: true})\n                .then(stream => {\n                    const options = {\n                        audioBitsPerSecond: 16000,\n                        type: 'audio',\n                        recorderType: RecordRTC.StereoAudioRecorder,\n                        mimeType: 'audio/wav',\n                        numberOfAudioChannels: 1\n                    };\n                    recorder = new RecordRTC(stream, options);\n                    isRecording = true;\n\n                    recorder.startRecording();\n                    window.console.log('started to record');\n\n                    return;\n                })\n                .catch((err) => {\n                    window.console.error(err);\n                });\n            break;\n\n        case true:\n            isRecording = false;\n            recorder.stopRecording(() => {\n                const audioBlob = recorder.getBlob();\n                window.console.log('audioBlob:', audioBlob);\n\n                const audioUrl = URL.createObjectURL(audioBlob);\n                audio = new Audio(audioUrl);\n                window.console.log('audioUrl', audioUrl);\n\n                if (pagenum === 1) {\n                    window.console.log('fuu >', pagenum, assignmentId, userId, username);\n\n                    const form = new FormData();\n                    form.append('repo_id', '5');\n                    form.append('ctx_id', mdlcfg.contextid);\n                    form.append('itemid', '0');\n                    form.append('savepath', '/');\n                    form.append('sesskey', mdlcfg.sesskey);\n                    form.append('repo_upload_file', audioBlob,\n                        `ans-${assignmentId}-${userId}-${username}-${new Date().valueOf()}.wav`);\n                    form.append('overwrite', '1');\n\n                    const req = new XMLHttpRequest();\n                    req.open('POST', mdlcfg.wwwroot + '/repository/repository_ajax.php?action=upload');\n                    req.addEventListener('readystatechange', (event) => {\n                        window.console.log(event);\n                        window.console.log(JSON.parse(event.target.response));\n                        document.forms.answerrecording[0].value = event.target.response;\n                        window.console.log('Enable submit button');\n                        document.getElementById('id_submitbutton').style.display = '';\n                    });\n                    req.send(form);\n                }\n            });\n            window.console.log(M.cfg);\n            window.console.log('recording stopped');\n            break;\n    }\n};\n\nconst listenRecording = () => {\n    if (audio !== undefined) {\n        audio.play();\n    }\n};\n\nexport const initializeMicrophone = (pagenum, assignmentId, userId, username) => {\n    const recButton = document.getElementById('record');\n    const stopButton = document.getElementById('stopRecord');\n    const listenButton = document.getElementById('listenButton');\n    stopButton.disabled = true;\n    listenButton.disabled = true;\n\n    window.console.log('page number', pagenum);\n\n    recButton.onclick = () => {\n        recButton.style.backgroundColor = \"blue\";\n        recButton.disabled = true;\n        stopButton.disabled = false;\n        listenButton.style.display = 'none';\n        startStopRecording(pagenum, assignmentId, userId, username);\n    };\n    stopButton.onclick = () => {\n        recButton.style.backgroundColor = \"red\";\n        recButton.disabled = false;\n        stopButton.disabled = true;\n        listenButton.disabled = false;\n        listenButton.style.display = 'inline-block';\n        startStopRecording(pagenum, assignmentId, userId, username);\n    };\n    listenButton.onclick = () => {\n        listenRecording();\n    };\n};"],"file":"mic.min.js"}