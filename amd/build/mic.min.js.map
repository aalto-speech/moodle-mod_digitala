{"version":3,"sources":["../src/mic.js"],"names":["recorder","isRecording","audioChunks","audio","startStopRecording","navigator","mediaDevices","getUserMedia","then","stream","MediaRecorder","start","window","console","log","addEventListener","event","push","data","audioBlob","Blob","audioUrl","URL","createObjectURL","Audio","catch","err","error","stop","listenRecording","play","initializeMicrophone","recButton","document","getElementById","stopButton","listenButton","disabled","onclick","style","backgroundColor","display"],"mappings":"kJAOIA,CAAAA,C,CACAC,CAAW,G,CACXC,CAAW,CAAG,E,CACdC,C,CAEEC,CAAkB,CAAG,UAAM,CAC7B,OAAQH,CAAR,EACI,OACII,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC,CAACJ,KAAK,GAAN,CAApC,EACKK,IADL,CACU,SAAAC,CAAM,CAAI,CACZT,CAAQ,CAAG,GAAIU,CAAAA,aAAJ,CAAkBD,CAAlB,CAAX,CACAR,CAAW,GAAX,CACAC,CAAW,CAAG,EAAd,CACAF,CAAQ,CAACW,KAAT,GACAC,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,mBAAnB,EAEAd,CAAQ,CAACe,gBAAT,CAA0B,eAA1B,CAA2C,SAAAC,CAAK,CAAI,CAChDd,CAAW,CAACe,IAAZ,CAAiBD,CAAK,CAACE,IAAvB,CACH,CAFD,EAIAlB,CAAQ,CAACe,gBAAT,CAA0B,MAA1B,CAAkC,UAAM,IAC9BI,CAAAA,CAAS,CAAG,GAAIC,CAAAA,IAAJ,CAASlB,CAAT,CADkB,CAE9BmB,CAAQ,CAAGC,GAAG,CAACC,eAAJ,CAAoBJ,CAApB,CAFmB,CAGpChB,CAAK,CAAG,GAAIqB,CAAAA,KAAJ,CAAUH,CAAV,CAAR,CACAT,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,UAAnB,CAA+BO,CAA/B,CACH,CALD,CAOH,CAnBL,EAoBKI,KApBL,CAoBW,SAACC,CAAD,CAAS,CACZd,MAAM,CAACC,OAAP,CAAec,KAAf,CAAqBD,CAArB,CACH,CAtBL,EAuBA,MAEJ,OACIzB,CAAW,GAAX,CACAD,CAAQ,CAAC4B,IAAT,GACAhB,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,mBAAnB,EACA,MA/BR,CAiCH,C,CAEKe,CAAe,CAAG,UAAM,CAC1B,GAAI1B,CAAK,SAAT,CAAyB,CACrBA,CAAK,CAAC2B,IAAN,EACH,CACJ,C,wBAEmC,QAAvBC,CAAAA,oBAAuB,EAAM,IAChCC,CAAAA,CAAS,CAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADoB,CAEhCC,CAAU,CAAGF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAFmB,CAGhCE,CAAY,CAAGH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAHiB,CAItCC,CAAU,CAACE,QAAX,IACAD,CAAY,CAACC,QAAb,IAEAL,CAAS,CAACM,OAAV,CAAoB,UAAM,CACtBN,CAAS,CAACO,KAAV,CAAgBC,eAAhB,CAAkC,MAAlC,CACAR,CAAS,CAACK,QAAV,IACAF,CAAU,CAACE,QAAX,IACAD,CAAY,CAACG,KAAb,CAAmBE,OAAnB,CAA6B,MAA7B,CACArC,CAAkB,EACrB,CAND,CAOA+B,CAAU,CAACG,OAAX,CAAqB,UAAM,CACvBN,CAAS,CAACO,KAAV,CAAgBC,eAAhB,CAAkC,KAAlC,CACAR,CAAS,CAACK,QAAV,IACAF,CAAU,CAACE,QAAX,IACAD,CAAY,CAACC,QAAb,IACAD,CAAY,CAACG,KAAb,CAAmBE,OAAnB,CAA6B,cAA7B,CACArC,CAAkB,EACrB,CAPD,CAQAgC,CAAY,CAACE,OAAb,CAAuB,UAAM,CACzBT,CAAe,EAClB,CACJ,C","sourcesContent":["// Standard license block omitted.\n/*\n * @module     mod_digitala/mic\n * @copyright  2022 Name\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nlet recorder;\nlet isRecording = false;\nlet audioChunks = [];\nlet audio;\n\nconst startStopRecording = () => {\n    switch (isRecording) {\n        case false:\n            navigator.mediaDevices.getUserMedia({audio: true})\n                .then(stream => {\n                    recorder = new MediaRecorder(stream);\n                    isRecording = true;\n                    audioChunks = [];\n                    recorder.start();\n                    window.console.log('started to record');\n\n                    recorder.addEventListener(\"dataavailable\", event => {\n                        audioChunks.push(event.data);\n                    });\n\n                    recorder.addEventListener('stop', () => {\n                        const audioBlob = new Blob(audioChunks);\n                        const audioUrl = URL.createObjectURL(audioBlob);\n                        audio = new Audio(audioUrl);\n                        window.console.log('audioUrl', audioUrl);\n                    });\n                    return;\n                })\n                .catch((err) => {\n                    window.console.error(err);\n                });\n            break;\n\n        case true:\n            isRecording = false;\n            recorder.stop();\n            window.console.log('recording stopped');\n            break;\n    }\n};\n\nconst listenRecording = () => {\n    if (audio !== undefined) {\n        audio.play();\n    }\n};\n\nexport const initializeMicrophone = () => {\n    const recButton = document.getElementById('record');\n    const stopButton = document.getElementById('stopRecord');\n    const listenButton = document.getElementById('listenButton');\n    stopButton.disabled = true;\n    listenButton.disabled = true;\n\n    recButton.onclick = () => {\n        recButton.style.backgroundColor = \"blue\";\n        recButton.disabled = true;\n        stopButton.disabled = false;\n        listenButton.style.display = 'none';\n        startStopRecording();\n    };\n    stopButton.onclick = () => {\n        recButton.style.backgroundColor = \"red\";\n        recButton.disabled = false;\n        stopButton.disabled = true;\n        listenButton.disabled = false;\n        listenButton.style.display = 'inline-block';\n        startStopRecording();\n    };\n    listenButton.onclick = () => {\n        listenRecording();\n    };\n};"],"file":"mic.min.js"}