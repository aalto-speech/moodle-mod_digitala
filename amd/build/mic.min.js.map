{"version":3,"file":"mic.min.js","sources":["../src/mic.js"],"sourcesContent":["// Standard license block omitted.\n/*\n * @module     mod_digitala/mic\n * @copyright  2022 Name\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport RecordRTC from 'RecordRTC';\nimport mdlcfg from 'core/config';\n\nlet recorder;\nlet isRecording = false;\nlet audio;\n\nconst startStopRecording = (pagenum, assignmentId, userId, username) => {\n    switch (isRecording) {\n        case false:\n            navigator.mediaDevices.getUserMedia({audio: true})\n                .then(stream => {\n                    const options = {\n                        audioBitsPerSecond: 16000,\n                        type: 'audio',\n                        recorderType: RecordRTC.StereoAudioRecorder,\n                        mimeType: 'audio/wav',\n                        numberOfAudioChannels: 1\n                    };\n                    recorder = new RecordRTC(stream, options);\n                    isRecording = true;\n\n                    recorder.startRecording();\n                    window.console.log('started to record');\n\n                    return;\n                })\n                .catch((err) => {\n                    window.console.error(err);\n                });\n            break;\n\n        case true:\n            isRecording = false;\n            recorder.stopRecording(() => {\n                const audioBlob = recorder.getBlob();\n                window.console.log('audioBlob:', audioBlob);\n\n                const audioUrl = URL.createObjectURL(audioBlob);\n                audio = new Audio(audioUrl);\n                window.console.log('audioUrl', audioUrl);\n\n                if (pagenum === 1) {\n                    window.console.log('fuu >', pagenum, assignmentId, userId, username);\n\n                    const form = new FormData();\n                    form.append('repo_id', '5');\n                    form.append('ctx_id', mdlcfg.contextid);\n                    form.append('itemid', '0');\n                    form.append('savepath', '/');\n                    form.append('sesskey', mdlcfg.sesskey);\n                    form.append('repo_upload_file', audioBlob,\n                        `ans-${assignmentId}-${userId}-${username}-${new Date().valueOf()}.wav`);\n                    form.append('overwrite', '1');\n\n                    const req = new XMLHttpRequest();\n                    req.open('POST', mdlcfg.wwwroot + '/repository/repository_ajax.php?action=upload');\n                    req.addEventListener('readystatechange', (event) => {\n                        window.console.log(event);\n                        window.console.log(JSON.parse(event.target.response));\n                        document.forms.answerrecording[0].value = event.target.response;\n                        window.console.log('Enable submit button');\n                        document.getElementById('id_submitbutton').style.display = '';\n                    });\n                    req.send(form);\n                }\n            });\n            window.console.log(M.cfg);\n            window.console.log('recording stopped');\n            break;\n    }\n};\n\nconst listenRecording = () => {\n    if (audio !== undefined) {\n        audio.play();\n    }\n};\n\nexport const initializeMicrophone = (pagenum, assignmentId, userId, username) => {\n    const recButton = document.getElementById('record');\n    const stopButton = document.getElementById('stopRecord');\n    const listenButton = document.getElementById('listenButton');\n    stopButton.disabled = true;\n    listenButton.disabled = true;\n\n    window.console.log('page number', pagenum);\n\n    recButton.onclick = () => {\n        recButton.style.backgroundColor = \"blue\";\n        recButton.disabled = true;\n        stopButton.disabled = false;\n        listenButton.style.display = 'none';\n        startStopRecording(pagenum, assignmentId, userId, username);\n    };\n    stopButton.onclick = () => {\n        recButton.style.backgroundColor = \"red\";\n        recButton.disabled = false;\n        stopButton.disabled = true;\n        listenButton.disabled = false;\n        listenButton.style.display = 'inline-block';\n        startStopRecording(pagenum, assignmentId, userId, username);\n    };\n    listenButton.onclick = () => {\n        listenRecording();\n    };\n};"],"names":["recorder","audio","isRecording","startStopRecording","pagenum","assignmentId","userId","username","navigator","mediaDevices","getUserMedia","then","stream","options","audioBitsPerSecond","type","recorderType","RecordRTC","StereoAudioRecorder","mimeType","numberOfAudioChannels","startRecording","window","console","log","catch","err","error","stopRecording","audioBlob","getBlob","audioUrl","URL","createObjectURL","Audio","form","FormData","append","mdlcfg","contextid","sesskey","Date","valueOf","req","XMLHttpRequest","open","wwwroot","addEventListener","event","JSON","parse","target","response","document","forms","answerrecording","value","getElementById","style","display","send","M","cfg","recButton","stopButton","listenButton","disabled","onclick","backgroundColor","undefined","play"],"mappings":";;;;;SASIA,gMAEAC,MADAC,aAAc,EAGZC,mBAAqB,SAACC,QAASC,aAAcC,OAAQC,iBAC/CL,kBACC,EACDM,UAAUC,aAAaC,aAAa,CAACT,OAAO,IACvCU,MAAK,SAAAC,YACIC,QAAU,CACZC,mBAAoB,KACpBC,KAAM,QACNC,aAAcC,mBAAUC,oBACxBC,SAAU,YACVC,sBAAuB,GAE3BpB,SAAW,IAAIiB,mBAAUL,OAAQC,SACjCX,aAAc,EAEdF,SAASqB,iBACTC,OAAOC,QAAQC,IAAI,wBAItBC,OAAM,SAACC,KACJJ,OAAOC,QAAQI,MAAMD,mBAI5B,EACDxB,aAAc,EACdF,SAAS4B,eAAc,eACbC,UAAY7B,SAAS8B,UAC3BR,OAAOC,QAAQC,IAAI,aAAcK,eAE3BE,SAAWC,IAAIC,gBAAgBJ,cACrC5B,MAAQ,IAAIiC,MAAMH,UAClBT,OAAOC,QAAQC,IAAI,WAAYO,UAEf,IAAZ3B,QAAe,CACfkB,OAAOC,QAAQC,IAAI,QAASpB,QAASC,aAAcC,OAAQC,cAErD4B,KAAO,IAAIC,SACjBD,KAAKE,OAAO,UAAW,KACvBF,KAAKE,OAAO,SAAUC,gBAAOC,WAC7BJ,KAAKE,OAAO,SAAU,KACtBF,KAAKE,OAAO,WAAY,KACxBF,KAAKE,OAAO,UAAWC,gBAAOE,SAC9BL,KAAKE,OAAO,mBAAoBR,wBACrBxB,yBAAgBC,mBAAUC,sBAAY,IAAIkC,MAAOC,mBAC5DP,KAAKE,OAAO,YAAa,SAEnBM,IAAM,IAAIC,eAChBD,IAAIE,KAAK,OAAQP,gBAAOQ,QAAU,iDAClCH,IAAII,iBAAiB,oBAAoB,SAACC,OACtC1B,OAAOC,QAAQC,IAAIwB,OACnB1B,OAAOC,QAAQC,IAAIyB,KAAKC,MAAMF,MAAMG,OAAOC,WAC3CC,SAASC,MAAMC,gBAAgB,GAAGC,MAAQR,MAAMG,OAAOC,SACvD9B,OAAOC,QAAQC,IAAI,wBACnB6B,SAASI,eAAe,mBAAmBC,MAAMC,QAAU,MAE/DhB,IAAIiB,KAAKzB,UAGjBb,OAAOC,QAAQC,IAAIqC,EAAEC,KACrBxC,OAAOC,QAAQC,IAAI,qDAWK,SAACpB,QAASC,aAAcC,OAAQC,cAC1DwD,UAAYV,SAASI,eAAe,UACpCO,WAAaX,SAASI,eAAe,cACrCQ,aAAeZ,SAASI,eAAe,gBAC7CO,WAAWE,UAAW,EACtBD,aAAaC,UAAW,EAExB5C,OAAOC,QAAQC,IAAI,cAAepB,SAElC2D,UAAUI,QAAU,WAChBJ,UAAUL,MAAMU,gBAAkB,OAClCL,UAAUG,UAAW,EACrBF,WAAWE,UAAW,EACtBD,aAAaP,MAAMC,QAAU,OAC7BxD,mBAAmBC,QAASC,aAAcC,OAAQC,WAEtDyD,WAAWG,QAAU,WACjBJ,UAAUL,MAAMU,gBAAkB,MAClCL,UAAUG,UAAW,EACrBF,WAAWE,UAAW,EACtBD,aAAaC,UAAW,EACxBD,aAAaP,MAAMC,QAAU,eAC7BxD,mBAAmBC,QAASC,aAAcC,OAAQC,WAEtD0D,aAAaE,QAAU,gBA7BTE,IAAVpE,OACAA,MAAMqE"}