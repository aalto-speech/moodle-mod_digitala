{"version":3,"file":"mic.min.js","sources":["../src/mic.js"],"sourcesContent":["// Standard license block omitted.\n/*\n * @module     mod_digitala/mic\n * @copyright  2022 Name\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint-disable no-nested-ternary */\n\nimport RecordRTC from 'RecordRTC';\nimport mdlcfg from 'core/config';\nimport {get_strings as getStrings} from 'core/str';\n\nlet recorder;\nconst recButton = document.getElementById('record');\nconst listenButton = document.getElementById('listen');\nlet audio;\nlet langStrings;\nlet pagenum;\nlet assignmentId;\nlet userId;\nlet username;\nlet maxLength;\nlet draftItemId;\nlet attemptNumber;\nlet timeout;\nlet interval;\nlet sec;\n\nconst convertSecondsToString = (seconds) => {\n    let hours = Math.floor(seconds / 3600);\n    let minutes = Math.floor((seconds - (hours * 3600)) / 60);\n    let second = Math.floor(seconds - (hours * 3600) - (minutes * 60));\n\n    hours = hours === 0\n        ? ''\n        : hours < 10\n            ? `0${hours}:`\n            : `${hours}:`;\n    minutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    second = second < 10 ? `0${second}` : `${second}`;\n\n    return `${hours}${minutes}:${second}`;\n};\n\nconst startRecording = async() => {\n    const notGranted = (await navigator.mediaDevices.enumerateDevices())[0].label === '';\n    if (notGranted) {\n        try {\n            navigator.mediaDevices.getUserMedia({audio: true});\n            recButton.innerHTML = '<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\">'\n            + '</span><span class=\"sr-only\">' + langStrings[2] + '</span>';\n        } catch {\n            recButton.textContent = langStrings[3];\n            return;\n        }\n    }\n\n    clearTimeout(timeout);\n    clearInterval(interval);\n\n    if (navigator.mediaDevices !== undefined) {\n        navigator.mediaDevices.getUserMedia({audio: true})\n        .then(stream => {\n            const options = {\n                audioBitsPerSecond: 16000,\n                desiredSampRate: 16000,\n                type: 'audio',\n                recorderType: RecordRTC.StereoAudioRecorder,\n                mimeType: 'audio/wav',\n                numberOfAudioChannels: 1,\n                disableLogs: true\n            };\n            recorder = new RecordRTC(stream, options);\n\n            recorder.startRecording();\n\n            recButton.innerHTML = '<span>' + langStrings[1] + '</span> ' + document.getElementById('stopIcon').innerHTML;\n            recButton.onclick = stopRecording;\n            listenButton.disabled = true;\n\n            sec = 0;\n            interval = setInterval(() => {\n                sec += 1;\n                document.getElementById('recordingLength').textContent = convertSecondsToString(sec);\n            }, 1000);\n\n            if (pagenum == 1 && maxLength != 0) {\n                timeout = setTimeout(() => {\n                    stopRecording();\n                }, maxLength * 1000);\n            }\n            return;\n        })\n        .catch(() => {\n            recButton.textContent = langStrings[3];\n        });\n    } else {\n        recButton.textContent = langStrings[3];\n        return;\n    }\n};\n\nconst stopRecording = () => {\n    if (recorder.getState() === 'recording') {\n\n        recorder.stopRecording(() => {\n            clearTimeout(timeout);\n            clearInterval(interval);\n            const audioBlob = recorder.getBlob();\n            const audioUrl = URL.createObjectURL(audioBlob);\n            audio = new Audio(audioUrl);\n            if (pagenum === 1) {\n                const form = new FormData();\n                form.append('repo_id', '5');\n                form.append('ctx_id', mdlcfg.contextid);\n                form.append('itemid', draftItemId);\n                form.append('savepath', '/');\n                form.append('sesskey', mdlcfg.sesskey);\n                form.append('repo_upload_file', audioBlob,\n                    `ans-${assignmentId}-${userId}-${username}-${attemptNumber}.wav`);\n                form.append('overwrite', '1');\n\n                const req = new XMLHttpRequest();\n                req.open('POST', mdlcfg.wwwroot + '/repository/repository_ajax.php?action=upload');\n                req.addEventListener('readystatechange', (event) => {\n                    if (event.target.readyState === 4) {\n                        if (event.target.status === 200) {\n                            document.forms.answerrecording[0].value = event.target.response;\n                            document.forms.answerrecording[1].value = sec;\n                            document.getElementById('submitModalButton').style.display = '';\n                        } else {\n                            document.getElementById('submitErrors').innerHTML = langStrings[4];\n                        }\n                    }\n                });\n                req.send(form);\n            }\n            recButton.innerHTML = '<span>' + langStrings[0] + '</span> ' + document.getElementById('startIcon').innerHTML;\n            recButton.onclick = startRecording;\n            listenButton.disabled = false;\n        });\n    }\n};\n\nconst listenRecording = () => {\n    const microphoneIcon = document.getElementById('microphoneIconBox');\n    if (audio !== undefined) {\n        audio.play();\n        if (pagenum === 0) {\n            microphoneIcon.style.border = '2.5px dashed green';\n        }\n\n    } else {\n        if (pagenum === 0) {\n            microphoneIcon.style.border = '2.5px dashed red';\n        }\n    }\n};\n\nexport const initializeMicrophone = async(pagenumIn, assignmentIdIn, userIdIn, usernameIn,\n                                          maxLengthIn, draftItemIdIn, attemptNumberIn) => {\n    pagenum = pagenumIn;\n    assignmentId = assignmentIdIn;\n    userId = userIdIn;\n    username = usernameIn;\n    maxLength = maxLengthIn;\n    draftItemId = draftItemIdIn;\n    attemptNumber = attemptNumberIn;\n    langStrings = await getStrings(\n        [\n            {\n                key: 'startbutton-again',\n                component: 'digitala'\n            },\n            {\n                key: 'stopbutton',\n                component: 'digitala'\n\n            },\n            {\n                key: 'startbutton-loading',\n                component: 'digitala'\n\n            },\n            {\n                key: 'startbutton-error',\n                component: 'digitala'\n            },\n            {\n                key: 'error-save-recording',\n                component: 'digitala'\n            }\n        ]\n    );\n\n    try {\n        recButton.onclick = startRecording;\n        listenButton.onclick = listenRecording;\n    } catch (e) {\n        return;\n    }\n};\n"],"names":["recorder","audio","langStrings","pagenum","assignmentId","userId","username","maxLength","draftItemId","attemptNumber","timeout","interval","sec","recButton","document","getElementById","listenButton","startRecording","navigator","mediaDevices","enumerateDevices","label","getUserMedia","innerHTML","textContent","clearTimeout","clearInterval","undefined","then","stream","options","audioBitsPerSecond","desiredSampRate","type","recorderType","RecordRTC","StereoAudioRecorder","mimeType","numberOfAudioChannels","disableLogs","onclick","stopRecording","disabled","setInterval","seconds","hours","minutes","second","Math","floor","setTimeout","catch","getState","audioBlob","getBlob","audioUrl","URL","createObjectURL","Audio","form","FormData","append","mdlcfg","contextid","sesskey","req","XMLHttpRequest","open","wwwroot","addEventListener","event","target","readyState","status","forms","answerrecording","value","response","style","display","send","listenRecording","microphoneIcon","play","border","initializeMicrophone","pagenumIn","assignmentIdIn","userIdIn","usernameIn","maxLengthIn","draftItemIdIn","attemptNumberIn","key","component"],"mappings":"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"}