{"version":3,"sources":["../src/mic.js"],"names":["init","document","addEventListener","e","record","target","closest","stopRecord","disabled","style","backgroundColor","getElementById"],"mappings":"sIAOoB,QAAPA,CAAAA,IAAO,EAAM,CACtBC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmC,SAAAC,CAAC,CAAI,IAC9BC,CAAAA,CAAM,CAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,SAAjB,CADqB,CAE9BC,CAAU,CAAGJ,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,aAAjB,CAFiB,CAGpC,GAAIF,CAAJ,CAAY,CACRA,CAAM,CAACI,QAAP,IACAJ,CAAM,CAACK,KAAP,CAAaC,eAAb,CAA+B,MAA/B,CACAT,QAAQ,CAACU,cAAT,CAAwB,YAAxB,EAAsCH,QAAtC,GAGH,CACD,GAAID,CAAJ,CAAgB,CACZN,QAAQ,CAACU,cAAT,CAAwB,QAAxB,EAAkCH,QAAlC,IACAP,QAAQ,CAACU,cAAT,CAAwB,QAAxB,EAAkCF,KAAlC,CAAwCC,eAAxC,CAA0D,KAG7D,CACJ,CAhBD,CAiBH,C","sourcesContent":["// Standard license block omitted.\n/*\n * @module     mod_digitala/mic\n * @copyright  2022 Name\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const init = () => {\n    document.addEventListener('click', e => {\n        const record = e.target.closest('.record');\n        const stopRecord = e.target.closest('.stopRecord');\n        if (record) {\n            record.disabled = true;\n            record.style.backgroundColor = \"blue\";\n            document.getElementById(\"stopRecord\").disabled = false;\n            //audioChunks = [];\n            //rec.start();\n        }\n        if (stopRecord) {\n            document.getElementById(\"record\").disabled = false;\n            document.getElementById(\"record\").style.backgroundColor = \"red\";\n            //record.style.backgroundColor = \"red\"\n            //rec.stop();\n        }\n    });\n};\n\n/*\nnavigator.mediaDevices.getUserMedia({audio:true})\n    .then(stream => {handlerFunction(stream)})\n\n\nfunction handlerFunction(stream) {\n    rec = new MediaRecorder(stream);\n    rec.ondataavailable = e => {\n        audioChunks.push(e.data);\n        if (rec.state == \"inactive\"){\n            let blob = new Blob(audioChunks,{type:'audio/mpeg-3'});\n            recordedAudio.src = URL.createObjectURL(blob);\n            recordedAudio.controls=true;\n            recordedAudio.autoplay=true;\n            sendData(blob)\n        }\n    }\n}\n\nfunction sendData(data) {}\n\n\nrecord.onclick = e => {\n    //console.log('I was clicked')\n    record.disabled = true;\n    record.style.backgroundColor = \"blue\"\n    stopRecord.disabled=false;\n    audioChunks = [];\n    rec.start();\n}\n\nstopRecord.onclick = e => {\n    //console.log(\"I was clicked\")\n    record.disabled = false;\n    stop.disabled=true;\n    record.style.backgroundColor = \"red\"\n    rec.stop();\n}\n*/"],"file":"mic.min.js"}