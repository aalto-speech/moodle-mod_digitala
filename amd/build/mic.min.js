define("mod_digitala/mic",["exports","RecordRTC","core/config","core/str"],(function(_exports,_RecordRTC,_config,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/*
   * @module     mod_digitala/mic
   * @copyright  2022 Name
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */let recorder;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.initializeMicrophone=void 0,_RecordRTC=_interopRequireDefault(_RecordRTC),_config=_interopRequireDefault(_config);const recButton=document.getElementById("record"),listenButton=document.getElementById("listen");let audio,langStrings,pagenum,assignmentId,userId,username,maxLength,timeout,interval,sec;const startRecording=async()=>{if(""===(await navigator.mediaDevices.enumerateDevices())[0].label)try{navigator.mediaDevices.getUserMedia({audio:!0}),recButton.innerHTML='<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span><span class="sr-only">'+langStrings[2]+"</span>"}catch{return void(recButton.textContent=langStrings[3])}clearTimeout(timeout),clearInterval(interval),void 0!==navigator.mediaDevices?navigator.mediaDevices.getUserMedia({audio:!0}).then((stream=>{const options={audioBitsPerSecond:16e3,desiredSampRate:16e3,type:"audio",recorderType:_RecordRTC.default.StereoAudioRecorder,mimeType:"audio/wav",numberOfAudioChannels:1,disableLogs:!0};recorder=new _RecordRTC.default(stream,options),recorder.startRecording(),recButton.innerHTML="<span>"+langStrings[1]+"</span> "+document.getElementById("stopIcon").innerHTML,recButton.onclick=stopRecording,listenButton.disabled=!0,sec=0,interval=setInterval((()=>{sec+=1,document.getElementById("recordingLength").textContent=(seconds=>{let hours=Math.floor(seconds/3600),minutes=Math.floor((seconds-3600*hours)/60),second=Math.floor(seconds-3600*hours-60*minutes);return hours=0===hours?"":hours<10?"0".concat(hours,":"):"".concat(hours,":"),minutes=minutes<10?"0".concat(minutes):"".concat(minutes),second=second<10?"0".concat(second):"".concat(second),"".concat(hours).concat(minutes,":").concat(second)})(sec)}),1e3),1==pagenum&&0!=maxLength&&(timeout=setTimeout((()=>{stopRecording()}),1e3*maxLength))})).catch((()=>{recButton.textContent=langStrings[3]})):recButton.textContent=langStrings[3]},stopRecording=()=>{"recording"===recorder.getState()&&recorder.stopRecording((()=>{clearTimeout(timeout),clearInterval(interval);const audioBlob=recorder.getBlob(),audioUrl=URL.createObjectURL(audioBlob);if(audio=new Audio(audioUrl),1===pagenum){const form=new FormData;form.append("repo_id","5"),form.append("ctx_id",_config.default.contextid),form.append("itemid","0"),form.append("savepath","/"),form.append("sesskey",_config.default.sesskey),form.append("repo_upload_file",audioBlob,"ans-".concat(assignmentId,"-").concat(userId,"-").concat(username,"-").concat((new Date).valueOf(),".wav")),form.append("overwrite","1");const req=new XMLHttpRequest;req.open("POST",_config.default.wwwroot+"/repository/repository_ajax.php?action=upload"),req.addEventListener("readystatechange",(event=>{4===event.target.readyState&&(200===event.target.status?(document.forms.answerrecording[0].value=event.target.response,document.forms.answerrecording[1].value=sec,document.getElementById("submitModalButton").style.display=""):document.getElementById("submitErrors").innerHTML=langStrings[4])})),req.send(form)}recButton.innerHTML="<span>"+langStrings[0]+"</span> "+document.getElementById("startIcon").innerHTML,recButton.onclick=startRecording,listenButton.disabled=!1}))},listenRecording=()=>{const microphoneIcon=document.getElementById("microphoneIconBox");void 0!==audio?(audio.play(),0===pagenum&&(microphoneIcon.style.border="2.5px dashed green")):0===pagenum&&(microphoneIcon.style.border="2.5px dashed red")};_exports.initializeMicrophone=async(pagenumIn,assignmentIdIn,userIdIn,usernameIn,maxLengthIn)=>{pagenum=pagenumIn,assignmentId=assignmentIdIn,userId=userIdIn,username=usernameIn,maxLength=maxLengthIn,langStrings=await(0,_str.get_strings)([{key:"startbutton-again",component:"digitala"},{key:"stopbutton",component:"digitala"},{key:"startbutton-loading",component:"digitala"},{key:"startbutton-error",component:"digitala"},{key:"error-save-recording",component:"digitala"}]);try{recButton.onclick=startRecording,listenButton.onclick=listenRecording}catch(e){return}}}));

//# sourceMappingURL=mic.min.js.map