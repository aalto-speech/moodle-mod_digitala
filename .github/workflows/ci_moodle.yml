name: Moodle Plugin CI for Moodle 3.9 and 3.11

on: [push]

jobs:
  test:
    runs-on: ubuntu-18.04

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php: ['7.3', '7.4']
        moodle-branch: ['MOODLE_39_STABLE']
        database: [pgsql]
        experimental: [false]
        extensions: ['tideways']
        include:
          - php: '8.0'
            moodle-branch: 'MOODLE_311_STABLE'
            database: pgsql
            experimental: true
          - php: '8.0'
            moodle-branch: 'master'
            database: pgsql
            experimental: true

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          path: plugin

      - name: Edit API Docker-compose to use same network as Postgres
        run: |
          export network=$(docker network ls -f name=github --format "{{.Name}}")
          sed -i "s+REPLACE_THIS+${network}+g" ./plugin/scripts/local-api/docker-compose.yml
          cat ./plugin/scripts/local-api/docker-compose.yml

      - name: Setup API-container for testing
        run: docker-compose -f ./plugin/scripts/local-api/docker-compose.yml up -d

      - name: Print out API-containers logs
        run: echo $(docker logs digitala-api)

      - name: Test API is reachable
        run: |
          export ip=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' digitala-api)
          echo ${ip}
          curl http://${ip}:3000/

      - name: Add digitala-api to /etc/hosts
        run: |
          export ip=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' digitala-api)
          echo ${ip}
          sudo echo "${ip} digitala-api" | sudo tee -a /etc/hosts

      - name: Test API is reachable via hostname digitala-api
        run: |
          curl http://digitala-api:3000/

      - name: Print out API-containers logs
        run: echo $(docker logs digitala-api)

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}, pcov
          ini-values: max_input_vars=5000, memory_limit=-1, zend_enable_gc=0, max_file_size=100G, post_max_size=100G, upload_max_filesize=100G, tideways.log_segfaults=1
          coverage: pcov

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHPUnit tests # Something wrong with making coverage with PHP 8.0 and Moodle 3.11, so skipping it
        continue-on-error: ${{ matrix.experimental }}
        if: ${{ always() }}
        run: |
          mkdir coverage
          chmod 777 coverage
          cd moodle
          php admin/tool/phpunit/cli/init.php
          vendor/bin/phpunit --testsuite mod_digitala_testsuite --debug --coverage-clover $(pwd)/../coverage/coverage.xml
          cd ..
          cd coverage
          ls -la
          cd ..

      - name: Codecov upload
        uses: codecov/codecov-action@v2
        continue-on-error: true
        if: ${{ always() }} # Skip in PHP 8.0 since tests are not run at the moment
        with:
          files: ./coverage/coverage.xml
          fail_ci_if_error: ${{ !matrix.experimental }}
          root_dir: ./moodle/mod/digitala/
          name: ${{ matrix.moodle-branch }} (${{ matrix.php }})

      - name: Check out moodle brownser configs base
        uses: actions/checkout@v2
        with:
          repository: andrewnicols/moodle-browser-config
          path: moodle-browser-config

      - name: Add additional Behat Browsers
        run: |
          sed -i "s+// Extra config.+require_once('$(pwd)/moodle-browser-config/init.php');+g" moodle/config.php
          cp $(pwd)/plugin/tests/configs/localprofiles-ci $(pwd)/moodle-browser-config/localprofiles.php

      - name: PHP Lint
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ !matrix.experimental }}
        run: moodle-plugin-ci phplint

      - name: PHP Copy/Paste Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ !matrix.experimental }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ !matrix.experimental }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ !matrix.experimental }}
        run: moodle-plugin-ci codechecker --max-warnings 0

      - name: Moodle PHPDoc Checker
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ !matrix.experimental }}
        run: moodle-plugin-ci phpdoc

      - name: Validating
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ !matrix.experimental }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ !matrix.experimental }}
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ !matrix.experimental }}
        run: moodle-plugin-ci mustache

      - name: Grunt
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ matrix.moodle-branch != 'master' }}
        run: moodle-plugin-ci grunt --max-lint-warnings 0

      - name: Behat features
        continue-on-error: ${{ matrix.experimental }}
        if: ${{ always() }}
        run: |
          docker -v
          docker run -d --rm --name=selenium --net=host --shm-size=2g -v $(pwd)/moodle:$(pwd)/moodle selenium/standalone-chrome:3
          cd $(pwd)/moodle
          php -S localhost:8000 & echo 'started local'
          php admin/tool/behat/cli/init.php
          php admin/tool/behat/cli/run.php --tags=@mod_digitala --profile=audiochrome --verbose -vvv --auto-rerun=2

  version:
    runs-on: ubuntu-18.04
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: test

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          path: plugin

      - name: Run bump-version.sh
        run: |
          chmod +x ./plugin/scripts/bump-version.sh
          ./plugin/scripts/bump-version.sh

      - uses: EndBug/add-and-commit@v8
        with:
          add: version.php
          message: 'Bump version'
          cwd: './plugin'
          default_author: user_info
